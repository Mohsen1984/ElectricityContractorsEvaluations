// <auto-generated />
using System;
using App.UI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.UI.Migrations
{
    [DbContext(typeof(EvaluationContext))]
    [Migration("20190408051417_36")]
    partial class _36
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.UI.Models.ContractInfoModel", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("ExternalOrganizationRef");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ContractId");

                    b.HasIndex("ExternalOrganizationRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("ContractInfos","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EVFormItemModel", b =>
                {
                    b.Property<int>("EVFormItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<Guid?>("EVFormInstanceID");

                    b.Property<int?>("EVFormItemRef");

                    b.Property<int?>("EVFormRef");

                    b.Property<int?>("EvaluationFactorRef");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<decimal?>("Result");

                    b.Property<decimal?>("Score");

                    b.Property<byte?>("State");

                    b.Property<decimal?>("WeightFactor");

                    b.HasKey("EVFormItemId");

                    b.HasIndex("EVFormItemRef");

                    b.HasIndex("EVFormRef");

                    b.HasIndex("EvaluationFactorRef");

                    b.ToTable("EVFormItems","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EVFormModel", b =>
                {
                    b.Property<int>("EVFormId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<Guid?>("EVFormInstanceID");

                    b.Property<int?>("EVFormTemplateRef");

                    b.Property<int?>("EvaluatedPersoneRef");

                    b.Property<int?>("EvaluatedRoleRef");

                    b.Property<int?>("EvaluationPeriodRef");

                    b.Property<int?>("EvaluatorPersoneRef");

                    b.Property<int?>("EvaluatorRoleRef");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("EVFormId");

                    b.HasIndex("EVFormTemplateRef");

                    b.HasIndex("EvaluatedPersoneRef");

                    b.HasIndex("EvaluatedRoleRef");

                    b.HasIndex("EvaluationPeriodRef");

                    b.HasIndex("EvaluatorPersoneRef");

                    b.HasIndex("EvaluatorRoleRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("EVForms","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EVFormTemplateItemModel", b =>
                {
                    b.Property<int>("EVFormTemplateItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("EVFormTemplateItemRef");

                    b.Property<int?>("EVFormTemplateRef");

                    b.Property<int?>("EvaluationFactorRef");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<decimal>("Score");

                    b.Property<byte?>("State");

                    b.HasKey("EVFormTemplateItemId");

                    b.HasIndex("EVFormTemplateItemRef");

                    b.HasIndex("EVFormTemplateRef");

                    b.HasIndex("EvaluationFactorRef");

                    b.ToTable("EVFormTemplateItems","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EVFormTemplateModel", b =>
                {
                    b.Property<int>("EVFormTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("EvaluatedRoleRef");

                    b.Property<int?>("EvaluationPeriodRef");

                    b.Property<int?>("EvaluatorRoleRef");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("EVFormTemplateId");

                    b.HasIndex("EvaluatedRoleRef");

                    b.HasIndex("EvaluationPeriodRef");

                    b.HasIndex("EvaluatorRoleRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("EVFormTemplates","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EducationalLevelModel", b =>
                {
                    b.Property<int>("EducationalLevelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<byte?>("State");

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.HasKey("EducationalLevelId");

                    b.ToTable("EducationalLevels","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationFactorTreeModel", b =>
                {
                    b.Property<int>("EvaluationFactorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("EvaluationFactorRef");

                    b.Property<string>("EvaluationFactorType")
                        .HasMaxLength(5);

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<byte?>("State");

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.HasKey("EvaluationFactorId");

                    b.HasIndex("EvaluationFactorRef");

                    b.ToTable("EvaluationFactorTrees","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationPeriodModel", b =>
                {
                    b.Property<int>("PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FromDate");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("PeriodId");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("EvaluationPeriods","dbo");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationProjectModel", b =>
                {
                    b.Property<int>("EvaluationProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("PeriodRef");

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.HasKey("EvaluationProjectId");

                    b.HasIndex("PeriodRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("EvaluationProjects","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ExternalOrgTypeModel", b =>
                {
                    b.Property<int>("ExternalOrgTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ExternalOrgTypeId");

                    b.ToTable("ExternalOrgTypes","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ExternalOrganizationModel", b =>
                {
                    b.Property<int>("ExternalOrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("ExternalOrgTypeRef");

                    b.Property<string>("Fax")
                        .HasMaxLength(200);

                    b.Property<string>("Mail")
                        .HasMaxLength(200);

                    b.Property<string>("MainAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("Manager")
                        .HasMaxLength(200);

                    b.Property<string>("ManagerMobile")
                        .HasMaxLength(200);

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<string>("RegisterCode")
                        .HasMaxLength(200);

                    b.Property<byte?>("State");

                    b.Property<string>("SubAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("Tel")
                        .HasMaxLength(200);

                    b.Property<string>("Title");

                    b.HasKey("ExternalOrganizationId");

                    b.HasIndex("ExternalOrgTypeRef");

                    b.ToTable("ExternalOrganizations","dbo");
                });

            modelBuilder.Entity("App.UI.Models.OUTreeModel", b =>
                {
                    b.Property<int>("OUTreeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("OUTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("OUTreeId");

                    b.HasIndex("OUTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("OUTrees","dbo");
                });

            modelBuilder.Entity("App.UI.Models.PersonModel", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(1000);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("EducationLevelRef");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("FatherName")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(200);

                    b.Property<int?>("IDNumber");

                    b.Property<string>("LastName")
                        .HasMaxLength(200);

                    b.Property<string>("MobileNo")
                        .HasMaxLength(11);

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<string>("NationalID")
                        .HasMaxLength(10);

                    b.Property<byte?>("State");

                    b.Property<string>("Tel")
                        .HasMaxLength(50);

                    b.HasKey("PersonId");

                    b.HasIndex("EducationLevelRef");

                    b.ToTable("Persons","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ProjectInfoModel", b =>
                {
                    b.Property<int>("ProjectInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualFinishDate");

                    b.Property<DateTime?>("ActualStartDate");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<int?>("DocumnetCotrollerRef");

                    b.Property<decimal?>("EstimatedAmount");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("PlanedFinishDate");

                    b.Property<DateTime?>("PlanedStartDate");

                    b.Property<int?>("ProjectControllerRef");

                    b.Property<int?>("ProjectManagerRef");

                    b.Property<string>("ProjectNo");

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<int?>("ServiceTemplateTreeRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ProjectInfoId");

                    b.HasIndex("DocumnetCotrollerRef");

                    b.HasIndex("ProjectControllerRef");

                    b.HasIndex("ProjectManagerRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.HasIndex("ServiceTemplateTreeRef");

                    b.ToTable("ProjectInfos","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ProjectMemberModel", b =>
                {
                    b.Property<int>("ProjectMemberID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("PersoneRef");

                    b.Property<int?>("ProjectInfoRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<int?>("RoleOrgsRef");

                    b.Property<int?>("ServiceTreeRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ProjectMemberID");

                    b.HasIndex("PersoneRef");

                    b.HasIndex("ProjectInfoRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.HasIndex("RoleOrgsRef");

                    b.HasIndex("ServiceTreeRef");

                    b.ToTable("ProjectMember","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ProjectTreeModel", b =>
                {
                    b.Property<int>("ProjectTreeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<bool?>("IsTemplate");

                    b.Property<string>("Level");

                    b.Property<string>("LevelCode");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ProjectTreeId");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.ToTable("ProjectTrees","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ReginalPowerCorpModel", b =>
                {
                    b.Property<int?>("ReginalPowerCorpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Fax")
                        .HasMaxLength(200);

                    b.Property<string>("Mail")
                        .HasMaxLength(200);

                    b.Property<string>("MainAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("Manager")
                        .HasMaxLength(200);

                    b.Property<string>("ManagerMobile")
                        .HasMaxLength(200);

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<string>("RegisterCode")
                        .HasMaxLength(200);

                    b.Property<byte?>("State");

                    b.Property<string>("SubAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("Tel")
                        .HasMaxLength(200);

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.HasKey("ReginalPowerCorpId");

                    b.ToTable("ReginalPowerCorps","dbo");
                });

            modelBuilder.Entity("App.UI.Models.RoleOrgModel", b =>
                {
                    b.Property<int>("RoleOrgId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<byte?>("State");

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.HasKey("RoleOrgId");

                    b.ToTable("RoleOrgs","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ServiceTemplateTreeModel", b =>
                {
                    b.Property<int>("ServiceTemplateTreeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<byte?>("EvalType");

                    b.Property<string>("Level");

                    b.Property<string>("LevelCode");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<int?>("ServiceTemplateTreeRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ServiceTemplateTreeId");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.HasIndex("ServiceTemplateTreeRef");

                    b.ToTable("ServiceTemplateTree","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ServiceTreeModel", b =>
                {
                    b.Property<int>("ServiceTreeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<string>("Level");

                    b.Property<string>("LevelCode");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<int?>("ProjectInfoRef");

                    b.Property<int?>("ProjectTreeRef");

                    b.Property<int?>("ReginalPowerCorpRef");

                    b.Property<int?>("ServiceTemplateTreeRef");

                    b.Property<int?>("ServiceTreeRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title");

                    b.HasKey("ServiceTreeId");

                    b.HasIndex("ProjectInfoRef");

                    b.HasIndex("ProjectTreeRef");

                    b.HasIndex("ReginalPowerCorpRef");

                    b.HasIndex("ServiceTemplateTreeRef");

                    b.HasIndex("ServiceTreeRef");

                    b.ToTable("ServiceTree","dbo");
                });

            modelBuilder.Entity("App.UI.Models.TaskListModel", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80);

                    b.Property<string>("Description");

                    b.Property<DateTime?>("DoDate");

                    b.Property<DateTime?>("DueDate");

                    b.Property<int?>("EvaluationPeriodRef");

                    b.Property<string>("FormLink")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InsertDate");

                    b.Property<string>("Modified")
                        .HasMaxLength(10);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(80);

                    b.Property<byte?>("OutCome");

                    b.Property<byte?>("Priority");

                    b.Property<int?>("ProjectInfoRef");

                    b.Property<int?>("ReciverProjectMemberRef");

                    b.Property<int?>("SenderProjectMemberRef");

                    b.Property<byte?>("State");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("WatchDate");

                    b.Property<Guid?>("WfInstanceID");

                    b.HasKey("TaskId");

                    b.HasIndex("EvaluationPeriodRef");

                    b.HasIndex("ProjectInfoRef");

                    b.HasIndex("ReciverProjectMemberRef");

                    b.HasIndex("SenderProjectMemberRef");

                    b.ToTable("TaskLists","dbo");
                });

            modelBuilder.Entity("App.UI.Models.ContractInfoModel", b =>
                {
                    b.HasOne("App.UI.Models.ExternalOrganizationModel", "ExternalOrganization")
                        .WithMany()
                        .HasForeignKey("ExternalOrganizationRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTree")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.EVFormItemModel", b =>
                {
                    b.HasOne("App.UI.Models.EVFormItemModel", "EVFormParentItem")
                        .WithMany()
                        .HasForeignKey("EVFormItemRef");

                    b.HasOne("App.UI.Models.EVFormModel", "EVForm")
                        .WithMany()
                        .HasForeignKey("EVFormRef");

                    b.HasOne("App.UI.Models.EvaluationFactorTreeModel", "EvaluationFactor")
                        .WithMany()
                        .HasForeignKey("EvaluationFactorRef");
                });

            modelBuilder.Entity("App.UI.Models.EVFormModel", b =>
                {
                    b.HasOne("App.UI.Models.EVFormTemplateModel", "EVFormTemplate")
                        .WithMany()
                        .HasForeignKey("EVFormTemplateRef");

                    b.HasOne("App.UI.Models.PersonModel", "EvaluatedPersone")
                        .WithMany()
                        .HasForeignKey("EvaluatedPersoneRef");

                    b.HasOne("App.UI.Models.RoleOrgModel", "EvaluatedRole")
                        .WithMany()
                        .HasForeignKey("EvaluatedRoleRef");

                    b.HasOne("App.UI.Models.EvaluationPeriodModel", "EvaluationPeriod")
                        .WithMany()
                        .HasForeignKey("EvaluationPeriodRef");

                    b.HasOne("App.UI.Models.PersonModel", "EvaluatorPersone")
                        .WithMany()
                        .HasForeignKey("EvaluatorPersoneRef");

                    b.HasOne("App.UI.Models.RoleOrgModel", "EvaluatorRole")
                        .WithMany()
                        .HasForeignKey("EvaluatorRoleRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTree")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.EVFormTemplateItemModel", b =>
                {
                    b.HasOne("App.UI.Models.EVFormTemplateItemModel", "EVFormTemplateParentItem")
                        .WithMany()
                        .HasForeignKey("EVFormTemplateItemRef");

                    b.HasOne("App.UI.Models.EVFormTemplateModel", "EVFormTemplate")
                        .WithMany()
                        .HasForeignKey("EVFormTemplateRef");

                    b.HasOne("App.UI.Models.EvaluationFactorTreeModel", "EvaluationFactor")
                        .WithMany()
                        .HasForeignKey("EvaluationFactorRef");
                });

            modelBuilder.Entity("App.UI.Models.EVFormTemplateModel", b =>
                {
                    b.HasOne("App.UI.Models.RoleOrgModel", "EvaluatedRole")
                        .WithMany()
                        .HasForeignKey("EvaluatedRoleRef");

                    b.HasOne("App.UI.Models.EvaluationPeriodModel", "EvaluationPeriod")
                        .WithMany()
                        .HasForeignKey("EvaluationPeriodRef");

                    b.HasOne("App.UI.Models.RoleOrgModel", "EvaluatorRole")
                        .WithMany()
                        .HasForeignKey("EvaluatorRoleRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTree")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationFactorTreeModel", b =>
                {
                    b.HasOne("App.UI.Models.EvaluationFactorTreeModel", "EvaluationFactorParent")
                        .WithMany("Children")
                        .HasForeignKey("EvaluationFactorRef");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationPeriodModel", b =>
                {
                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.EvaluationProjectModel", b =>
                {
                    b.HasOne("App.UI.Models.EvaluationPeriodModel", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTree")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.ExternalOrganizationModel", b =>
                {
                    b.HasOne("App.UI.Models.ExternalOrgTypeModel", "ExternalOrgType")
                        .WithMany()
                        .HasForeignKey("ExternalOrgTypeRef");
                });

            modelBuilder.Entity("App.UI.Models.OUTreeModel", b =>
                {
                    b.HasOne("App.UI.Models.OUTreeModel", "OUTree")
                        .WithMany()
                        .HasForeignKey("OUTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.PersonModel", b =>
                {
                    b.HasOne("App.UI.Models.EducationalLevelModel", "EducationalLevel")
                        .WithMany()
                        .HasForeignKey("EducationLevelRef");
                });

            modelBuilder.Entity("App.UI.Models.ProjectInfoModel", b =>
                {
                    b.HasOne("App.UI.Models.PersonModel", "DocumnetCotroller")
                        .WithMany()
                        .HasForeignKey("DocumnetCotrollerRef");

                    b.HasOne("App.UI.Models.PersonModel", "ProjectController")
                        .WithMany()
                        .HasForeignKey("ProjectControllerRef");

                    b.HasOne("App.UI.Models.PersonModel", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTree")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");

                    b.HasOne("App.UI.Models.ServiceTemplateTreeModel", "ServiceTemplateTree")
                        .WithMany()
                        .HasForeignKey("ServiceTemplateTreeRef");
                });

            modelBuilder.Entity("App.UI.Models.ProjectMemberModel", b =>
                {
                    b.HasOne("App.UI.Models.PersonModel", "Persone")
                        .WithMany()
                        .HasForeignKey("PersoneRef");

                    b.HasOne("App.UI.Models.ServiceTreeModel", "ProjectInfo")
                        .WithMany()
                        .HasForeignKey("ProjectInfoRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");

                    b.HasOne("App.UI.Models.RoleOrgModel", "RoleOrgs")
                        .WithMany()
                        .HasForeignKey("RoleOrgsRef");

                    b.HasOne("App.UI.Models.ServiceTreeModel", "ServiceTreechild")
                        .WithMany()
                        .HasForeignKey("ServiceTreeRef");
                });

            modelBuilder.Entity("App.UI.Models.ProjectTreeModel", b =>
                {
                    b.HasOne("App.UI.Models.ProjectTreeModel", "ProjectTreechild")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");
                });

            modelBuilder.Entity("App.UI.Models.ServiceTemplateTreeModel", b =>
                {
                    b.HasOne("App.UI.Models.ProjectTreeModel", "RelatedProject")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");

                    b.HasOne("App.UI.Models.ServiceTemplateTreeModel", "ServiceTemplateTreechild")
                        .WithMany()
                        .HasForeignKey("ServiceTemplateTreeRef");
                });

            modelBuilder.Entity("App.UI.Models.ServiceTreeModel", b =>
                {
                    b.HasOne("App.UI.Models.ProjectInfoModel", "ProjectInfo")
                        .WithMany()
                        .HasForeignKey("ProjectInfoRef");

                    b.HasOne("App.UI.Models.ProjectTreeModel", "RelatedProject")
                        .WithMany()
                        .HasForeignKey("ProjectTreeRef");

                    b.HasOne("App.UI.Models.ReginalPowerCorpModel", "ReginalPowerCorp")
                        .WithMany()
                        .HasForeignKey("ReginalPowerCorpRef");

                    b.HasOne("App.UI.Models.ServiceTemplateTreeModel", "ServiceTemplateTreechild")
                        .WithMany()
                        .HasForeignKey("ServiceTemplateTreeRef");

                    b.HasOne("App.UI.Models.ServiceTreeModel", "ServiceTreechild")
                        .WithMany()
                        .HasForeignKey("ServiceTreeRef");
                });

            modelBuilder.Entity("App.UI.Models.TaskListModel", b =>
                {
                    b.HasOne("App.UI.Models.EvaluationPeriodModel", "EvaluationPeriod")
                        .WithMany()
                        .HasForeignKey("EvaluationPeriodRef");

                    b.HasOne("App.UI.Models.ProjectInfoModel", "ProjectInfo")
                        .WithMany()
                        .HasForeignKey("ProjectInfoRef");

                    b.HasOne("App.UI.Models.ProjectMemberModel", "ReciverProjectMember")
                        .WithMany()
                        .HasForeignKey("ReciverProjectMemberRef");

                    b.HasOne("App.UI.Models.ProjectMemberModel", "SenderProjectMember")
                        .WithMany()
                        .HasForeignKey("SenderProjectMemberRef");
                });
#pragma warning restore 612, 618
        }
    }
}
